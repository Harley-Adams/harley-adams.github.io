.App {
  text-align: center;
  margin-top: 50px;
}

.game-container {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  width: 100%; /* Sets the width of the container to be 100% of the viewport width */
  max-width: 100vw; /* Ensures the maximum width does not exceed the width of the viewport */
}

.previous-guesses {
  margin-bottom: 20px;
}

.prev-guess {
  margin-bottom: 10px;
}

.word-container {
  display: flex;
}

.letter-box {
  width: 30px;
  height: 30px;
  border: 1px solid black;
  margin: 0 2px;
  display: flex;
  justify-content: center;
  align-items: center;
}

.correct-letter {
  background-color: #4caf50; /* Green background for correct letters */
  color: white;
}

.wrong-letter {
  background-color: #ff5733; /* Red background for incorrect letters */
  color: white;
}

.wrong-position-letter {
  background-color: #ffd700; /* Yellow background for letters in the word but in the wrong position */
  color: black;
}

.unused-letter {
  background-color: white; /* White background for unused letters */
  color: black; /* Black color for the font */
}

/* Ensure the other classes are defined similarly to this */

/* .key {
  width: 40px;
  height: 40px;
  margin: 5px;
  border: 1px solid black;
  cursor: pointer;
} */

/* .key {
  display: flex;
  justify-content: center;
  align-items: center; 
  width: 40px;
  height: 40px;
  margin: 5px;
  border: 1px solid black;
  cursor: pointer;
} */

.keyboard-row {
  display: flex; /* Continues to use Flexbox */
  flex-wrap: nowrap; /* Prevents keys from wrapping */
  justify-content: center; /* Centers keys horizontally */
  align-items: center; /* Aligns keys vertically for a uniform appearance */
  padding: 0 30px; /* Adds horizontal padding for a buffer, no vertical padding */
  overflow-x: auto; /* Allows horizontal scrolling */
  width: calc(100% - 60px); /* Adjusts width to account for padding */
}

.key {
  display: flex;
  justify-content: center;
  align-items: center;
  width: 8vw; /* Each key takes up a percentage of the viewport width */
  height: 8vw; /* Maintains aspect ratio to keep keys square */
  max-width: 40px; /* Optional: limits the size to prevent too large keys on large screens */
  max-height: 40px; /* Matches max-width to maintain aspect ratio */
  margin: 0.5vw; /* Scales margin with viewport width */
  border: 1px solid black;
  cursor: pointer;
  font-size: 3vw; /* Optional: Scales the font size with the viewport width */
}

input[type="text"] {
  padding: 10px;
  margin-right: 10px;
}

button {
  padding: 10px 20px;
  background-color: #4caf50;
  color: white;
  border: none;
  cursor: pointer;
}

.animate-correct {
  animation: pop 0.3s ease;
}

.animate-wrong {
  animation: shake 0.3s ease;
}

.animate-wrong-position {
  animation: fade-in 0.3s ease;
}

@keyframes pop {
  0% {
    transform: scale(0.8);
  }
  50% {
    transform: scale(1.2);
  }
  100% {
    transform: scale(1);
  }
}

@keyframes shake {
  0%,
  100% {
    transform: translateX(0);
  }
  25% {
    transform: translateX(-5px);
  }
  75% {
    transform: translateX(5px);
  }
}

@keyframes fade-in {
  0% {
    opacity: 0;
  }
  100% {
    opacity: 1;
  }
}
